version: '3'

services:

  varnishtwitter:
    image: eeacms/varnish
    ports:
    - "80:6081"
    depends_on:
    - mytwitterclient
    environment:
      BACKENDS: "mytwitterclient"
      BACKENDS_PORT: "80"
      DNS_ENABLED: "true"
      BACKENDS_PROBE_INTERVAL: "3s"
      BACKENDS_PROBE_TIMEOUT: "1s"
      BACKENDS_PROBE_WINDOW: "3"
      BACKENDS_PROBE_THRESHOLD: "2"
    networks:
      - appnet

  mytwitter:
    image: mytwitter
    build:
      context: .
      dockerfile: MyTwitter/Dockerfile
    networks:
      - appnet
    depends_on:
      - databaseserver
      - mytwitter.queueprocessor
      - redisserver
      - elasticsearch
      
  databaseserver:
    image: databaseserver
    build:
      context: ./database
      dockerfile: Dockerfile
    volumes:
      - ./database:/var/opt/sqlserver
    networks:
      - appnet
    ports:
      - 1433
    
  mytwitter.queueprocessor:
    image: mytwitter.queueprocessor
    build:
      context: .
      dockerfile: MyTwitter.QueueProcessor/Dockerfile
    networks:
      - appnet
    depends_on:
      - queueserver

  queueserver:
    image: rabbitmq
    networks:
      - appnet

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.2
    networks:
      - appnet
    environment:
      - discovery.type=single-node

  redisserver:
    image: redis:3.2
    command: redis-server --appendonly yes
    networks:
      - appnet
    volumes:
      - ./redis:/data

  mytwitterclient:
    image: mytwitterclient
    build:
      context: ./my-twitter
      dockerfile: Dockerfile
    ports:
      - 80
    networks:
      - appnet

networks:
  appnet:
    driver: bridge
